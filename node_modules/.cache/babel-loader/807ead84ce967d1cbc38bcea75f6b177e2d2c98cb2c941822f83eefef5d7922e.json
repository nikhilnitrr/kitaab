{"ast":null,"code":"import { Response } from \"miragejs\";\n\n/**\r\n * All the routes related to Category are present here.\r\n * These are Publicly accessible routes.\r\n * */\n\n/**\r\n * This handler handles gets all categories in the db.\r\n * send GET Request at /api/categories\r\n * */\n\nexport const getAllCategoriesHandler = function () {\n  try {\n    return new Response(200, {}, {\n      categories: this.db.categories\n    });\n  } catch (error) {\n    return new Response(500, {}, {\n      error\n    });\n  }\n};\n\n/**\r\n * This handler handles gets all categories in the db.\r\n * send GET Request at /api/user/category/:categoryId\r\n * */\n\nexport const getCategoryHandler = function (schema, request) {\n  const categoryId = request.params.categoryId;\n  try {\n    const category = schema.categories.findBy({\n      _id: categoryId\n    });\n    return new Response(200, {}, {\n      category\n    });\n  } catch (error) {\n    return new Response(500, {}, {\n      error\n    });\n  }\n};","map":{"version":3,"names":["Response","getAllCategoriesHandler","categories","db","error","getCategoryHandler","schema","request","categoryId","params","category","findBy","_id"],"sources":["/Users/nichandr/NEOG/kitaab/src/backend/controllers/CategoryController.js"],"sourcesContent":["import { Response } from \"miragejs\";\r\n\r\n/**\r\n * All the routes related to Category are present here.\r\n * These are Publicly accessible routes.\r\n * */\r\n\r\n/**\r\n * This handler handles gets all categories in the db.\r\n * send GET Request at /api/categories\r\n * */\r\n\r\nexport const getAllCategoriesHandler = function () {\r\n  try {\r\n    return new Response(200, {}, { categories: this.db.categories });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * This handler handles gets all categories in the db.\r\n * send GET Request at /api/user/category/:categoryId\r\n * */\r\n\r\nexport const getCategoryHandler = function (schema, request) {\r\n  const categoryId = request.params.categoryId;\r\n  try {\r\n    const category = schema.categories.findBy({ _id: categoryId });\r\n    return new Response(200, {}, { category });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,UAAU;;AAEnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,uBAAuB,GAAG,SAAAA,CAAA,EAAY;EACjD,IAAI;IACF,OAAO,IAAID,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE;MAAEE,UAAU,EAAE,IAAI,CAACC,EAAE,CAACD;IAAW,CAAC,CAAC;EAClE,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,OAAO,IAAIJ,QAAQ,CACjB,GAAG,EACH,CAAC,CAAC,EACF;MACEI;IACF,CACF,CAAC;EACH;AACF,CAAC;;AAED;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,kBAAkB,GAAG,SAAAA,CAAUC,MAAM,EAAEC,OAAO,EAAE;EAC3D,MAAMC,UAAU,GAAGD,OAAO,CAACE,MAAM,CAACD,UAAU;EAC5C,IAAI;IACF,MAAME,QAAQ,GAAGJ,MAAM,CAACJ,UAAU,CAACS,MAAM,CAAC;MAAEC,GAAG,EAAEJ;IAAW,CAAC,CAAC;IAC9D,OAAO,IAAIR,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE;MAAEU;IAAS,CAAC,CAAC;EAC5C,CAAC,CAAC,OAAON,KAAK,EAAE;IACd,OAAO,IAAIJ,QAAQ,CACjB,GAAG,EACH,CAAC,CAAC,EACF;MACEI;IACF,CACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}