{"ast":null,"code":"import { Response } from \"miragejs\";\nimport { formatDate, requiresAuth } from \"../utils/authUtils\";\n\n/**\r\n * All the routes related to Wishlist are present here.\r\n * These are private routes.\r\n * Client needs to add \"authorization\" header with JWT token in it to access it.\r\n * */\n\n/**\r\n * This handler handles getting items to user's wishlist.\r\n * send GET Request at /api/user/wishlist\r\n * */\n\nexport const getWishlistItemsHandler = function (schema, request) {\n  const userId = requiresAuth.call(this, request);\n  if (!userId) {\n    return new Response(404, {}, {\n      errors: [\"The email you entered is not Registered. Not Found error\"]\n    });\n  }\n  const userWishlist = schema.users.findBy({\n    _id: userId\n  }).wishlist;\n  return new Response(200, {}, {\n    wishlist: userWishlist\n  });\n};\n\n/**\r\n * This handler handles adding items to user's wishlist.\r\n * send POST Request at /api/user/wishlist\r\n * body contains {product}\r\n * */\n\nexport const addItemToWishlistHandler = function (schema, request) {\n  const userId = requiresAuth.call(this, request);\n  try {\n    if (!userId) {\n      return new Response(404, {}, {\n        errors: [\"The email you entered is not Registered. Not Found error\"]\n      });\n    }\n    const userWishlist = schema.users.findBy({\n      _id: userId\n    }).wishlist;\n    const {\n      product\n    } = JSON.parse(request.requestBody);\n    userWishlist.push({\n      ...product,\n      createdAt: formatDate(),\n      updatedAt: formatDate()\n    });\n    this.db.users.update({\n      _id: userId\n    }, {\n      wishlist: userWishlist\n    });\n    return new Response(201, {}, {\n      wishlist: userWishlist\n    });\n  } catch (error) {\n    return new Response(500, {}, {\n      error\n    });\n  }\n};\n\n/**\r\n * This handler handles removing items to user's wishlist.\r\n * send DELETE Request at /api/user/wishlist\r\n * body contains {product}\r\n * */\n\nexport const removeItemFromWishlistHandler = function (schema, request) {\n  const userId = requiresAuth.call(this, request);\n  try {\n    if (!userId) {\n      return new Response(404, {}, {\n        errors: [\"The email you entered is not Registered. Not Found error\"]\n      });\n    }\n    let userWishlist = schema.users.findBy({\n      _id: userId\n    }).wishlist;\n    const productId = request.params.productId;\n    userWishlist = userWishlist.filter(item => item._id !== productId);\n    this.db.users.update({\n      _id: userId\n    }, {\n      wishlist: userWishlist\n    });\n    return new Response(200, {}, {\n      wishlist: userWishlist\n    });\n  } catch (error) {\n    return new Response(500, {}, {\n      error\n    });\n  }\n};","map":{"version":3,"names":["Response","formatDate","requiresAuth","getWishlistItemsHandler","schema","request","userId","call","errors","userWishlist","users","findBy","_id","wishlist","addItemToWishlistHandler","product","JSON","parse","requestBody","push","createdAt","updatedAt","db","update","error","removeItemFromWishlistHandler","productId","params","filter","item"],"sources":["/Users/nichandr/NEOG/e-commerce/kitaab/src/backend/controllers/WishlistController.js"],"sourcesContent":["import { Response } from \"miragejs\";\r\nimport { formatDate, requiresAuth } from \"../utils/authUtils\";\r\n\r\n/**\r\n * All the routes related to Wishlist are present here.\r\n * These are private routes.\r\n * Client needs to add \"authorization\" header with JWT token in it to access it.\r\n * */\r\n\r\n/**\r\n * This handler handles getting items to user's wishlist.\r\n * send GET Request at /api/user/wishlist\r\n * */\r\n\r\nexport const getWishlistItemsHandler = function (schema, request) {\r\n  const userId = requiresAuth.call(this, request);\r\n  if (!userId) {\r\n    return new Response(\r\n      404,\r\n      {},\r\n      {\r\n        errors: [\"The email you entered is not Registered. Not Found error\"],\r\n      }\r\n    );\r\n  }\r\n  const userWishlist = schema.users.findBy({ _id: userId }).wishlist;\r\n  return new Response(200, {}, { wishlist: userWishlist });\r\n};\r\n\r\n/**\r\n * This handler handles adding items to user's wishlist.\r\n * send POST Request at /api/user/wishlist\r\n * body contains {product}\r\n * */\r\n\r\nexport const addItemToWishlistHandler = function (schema, request) {\r\n  const userId = requiresAuth.call(this, request);\r\n  try {\r\n    if (!userId) {\r\n      return new Response(\r\n        404,\r\n        {},\r\n        {\r\n          errors: [\"The email you entered is not Registered. Not Found error\"],\r\n        }\r\n      );\r\n    }\r\n    const userWishlist = schema.users.findBy({ _id: userId }).wishlist;\r\n    const { product } = JSON.parse(request.requestBody);\r\n    userWishlist.push({\r\n      ...product,\r\n      createdAt: formatDate(),\r\n      updatedAt: formatDate(),\r\n    });\r\n    this.db.users.update({ _id: userId }, { wishlist: userWishlist });\r\n    return new Response(201, {}, { wishlist: userWishlist });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * This handler handles removing items to user's wishlist.\r\n * send DELETE Request at /api/user/wishlist\r\n * body contains {product}\r\n * */\r\n\r\nexport const removeItemFromWishlistHandler = function (schema, request) {\r\n  const userId = requiresAuth.call(this, request);\r\n  try {\r\n    if (!userId) {\r\n      return new Response(\r\n        404,\r\n        {},\r\n        {\r\n          errors: [\"The email you entered is not Registered. Not Found error\"],\r\n        }\r\n      );\r\n    }\r\n    let userWishlist = schema.users.findBy({ _id: userId }).wishlist;\r\n    const productId = request.params.productId;\r\n    userWishlist = userWishlist.filter((item) => item._id !== productId);\r\n    this.db.users.update({ _id: userId }, { wishlist: userWishlist });\r\n    return new Response(200, {}, { wishlist: userWishlist });\r\n  } catch (error) {\r\n    return new Response(\r\n      500,\r\n      {},\r\n      {\r\n        error,\r\n      }\r\n    );\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,UAAU;AACnC,SAASC,UAAU,EAAEC,YAAY,QAAQ,oBAAoB;;AAE7D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,uBAAuB,GAAG,SAAAA,CAAUC,MAAM,EAAEC,OAAO,EAAE;EAChE,MAAMC,MAAM,GAAGJ,YAAY,CAACK,IAAI,CAAC,IAAI,EAAEF,OAAO,CAAC;EAC/C,IAAI,CAACC,MAAM,EAAE;IACX,OAAO,IAAIN,QAAQ,CACjB,GAAG,EACH,CAAC,CAAC,EACF;MACEQ,MAAM,EAAE,CAAC,0DAA0D;IACrE,CACF,CAAC;EACH;EACA,MAAMC,YAAY,GAAGL,MAAM,CAACM,KAAK,CAACC,MAAM,CAAC;IAAEC,GAAG,EAAEN;EAAO,CAAC,CAAC,CAACO,QAAQ;EAClE,OAAO,IAAIb,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE;IAAEa,QAAQ,EAAEJ;EAAa,CAAC,CAAC;AAC1D,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMK,wBAAwB,GAAG,SAAAA,CAAUV,MAAM,EAAEC,OAAO,EAAE;EACjE,MAAMC,MAAM,GAAGJ,YAAY,CAACK,IAAI,CAAC,IAAI,EAAEF,OAAO,CAAC;EAC/C,IAAI;IACF,IAAI,CAACC,MAAM,EAAE;MACX,OAAO,IAAIN,QAAQ,CACjB,GAAG,EACH,CAAC,CAAC,EACF;QACEQ,MAAM,EAAE,CAAC,0DAA0D;MACrE,CACF,CAAC;IACH;IACA,MAAMC,YAAY,GAAGL,MAAM,CAACM,KAAK,CAACC,MAAM,CAAC;MAAEC,GAAG,EAAEN;IAAO,CAAC,CAAC,CAACO,QAAQ;IAClE,MAAM;MAAEE;IAAQ,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACZ,OAAO,CAACa,WAAW,CAAC;IACnDT,YAAY,CAACU,IAAI,CAAC;MAChB,GAAGJ,OAAO;MACVK,SAAS,EAAEnB,UAAU,CAAC,CAAC;MACvBoB,SAAS,EAAEpB,UAAU,CAAC;IACxB,CAAC,CAAC;IACF,IAAI,CAACqB,EAAE,CAACZ,KAAK,CAACa,MAAM,CAAC;MAAEX,GAAG,EAAEN;IAAO,CAAC,EAAE;MAAEO,QAAQ,EAAEJ;IAAa,CAAC,CAAC;IACjE,OAAO,IAAIT,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE;MAAEa,QAAQ,EAAEJ;IAAa,CAAC,CAAC;EAC1D,CAAC,CAAC,OAAOe,KAAK,EAAE;IACd,OAAO,IAAIxB,QAAQ,CACjB,GAAG,EACH,CAAC,CAAC,EACF;MACEwB;IACF,CACF,CAAC;EACH;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,6BAA6B,GAAG,SAAAA,CAAUrB,MAAM,EAAEC,OAAO,EAAE;EACtE,MAAMC,MAAM,GAAGJ,YAAY,CAACK,IAAI,CAAC,IAAI,EAAEF,OAAO,CAAC;EAC/C,IAAI;IACF,IAAI,CAACC,MAAM,EAAE;MACX,OAAO,IAAIN,QAAQ,CACjB,GAAG,EACH,CAAC,CAAC,EACF;QACEQ,MAAM,EAAE,CAAC,0DAA0D;MACrE,CACF,CAAC;IACH;IACA,IAAIC,YAAY,GAAGL,MAAM,CAACM,KAAK,CAACC,MAAM,CAAC;MAAEC,GAAG,EAAEN;IAAO,CAAC,CAAC,CAACO,QAAQ;IAChE,MAAMa,SAAS,GAAGrB,OAAO,CAACsB,MAAM,CAACD,SAAS;IAC1CjB,YAAY,GAAGA,YAAY,CAACmB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACjB,GAAG,KAAKc,SAAS,CAAC;IACpE,IAAI,CAACJ,EAAE,CAACZ,KAAK,CAACa,MAAM,CAAC;MAAEX,GAAG,EAAEN;IAAO,CAAC,EAAE;MAAEO,QAAQ,EAAEJ;IAAa,CAAC,CAAC;IACjE,OAAO,IAAIT,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE;MAAEa,QAAQ,EAAEJ;IAAa,CAAC,CAAC;EAC1D,CAAC,CAAC,OAAOe,KAAK,EAAE;IACd,OAAO,IAAIxB,QAAQ,CACjB,GAAG,EACH,CAAC,CAAC,EACF;MACEwB;IACF,CACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}