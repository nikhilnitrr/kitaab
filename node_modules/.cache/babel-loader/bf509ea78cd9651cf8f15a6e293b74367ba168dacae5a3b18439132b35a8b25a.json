{"ast":null,"code":"import { Server, Model, RestSerializer } from \"miragejs\";\nimport { loginHandler, signupHandler } from \"./backend/controllers/AuthController\";\nimport { addItemToCartHandler, getCartItemsHandler, removeItemFromCartHandler, updateCartItemHandler } from \"./backend/controllers/CartController\";\nimport { getAllCategoriesHandler, getCategoryHandler } from \"./backend/controllers/CategoryController\";\nimport { getAllProductsHandler, getProductHandler } from \"./backend/controllers/ProductController\";\nimport { addItemToWishlistHandler, getWishlistItemsHandler, removeItemFromWishlistHandler } from \"./backend/controllers/WishlistController\";\nimport { categories } from \"./backend/db/categories\";\nimport { products } from \"./backend/db/products\";\nimport { users } from \"./backend/db/users\";\nexport function makeServer() {\n  let {\n    environment = \"development\"\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return new Server({\n    serializers: {\n      application: RestSerializer\n    },\n    environment,\n    models: {\n      product: Model,\n      category: Model,\n      user: Model,\n      cart: Model,\n      wishlist: Model\n    },\n    // Runs on the start of the server\n    seeds(server) {\n      // disballing console logs from Mirage\n      server.logging = false;\n      products.forEach(item => {\n        server.create(\"product\", {\n          ...item\n        });\n      });\n      users.forEach(item => server.create(\"user\", {\n        ...item,\n        cart: [],\n        wishlist: []\n      }));\n      categories.forEach(item => server.create(\"category\", {\n        ...item\n      }));\n    },\n    routes() {\n      this.namespace = \"api\";\n      // auth routes (public)\n      this.post(\"/auth/signup\", signupHandler.bind(this));\n      this.post(\"/auth/login\", loginHandler.bind(this));\n\n      // products routes (public)\n      this.get(\"/products\", getAllProductsHandler.bind(this));\n      this.get(\"/products/:productId\", getProductHandler.bind(this));\n\n      // categories routes (public)\n      this.get(\"/categories\", getAllCategoriesHandler.bind(this));\n      this.get(\"/categories/:categoryId\", getCategoryHandler.bind(this));\n\n      // cart routes (private)\n      this.get(\"/user/cart\", getCartItemsHandler.bind(this));\n      this.post(\"/user/cart\", addItemToCartHandler.bind(this));\n      this.post(\"/user/cart/:productId\", updateCartItemHandler.bind(this));\n      this.delete(\"/user/cart/:productId\", removeItemFromCartHandler.bind(this));\n\n      // wishlist routes (private)\n      this.get(\"/user/wishlist\", getWishlistItemsHandler.bind(this));\n      this.post(\"/user/wishlist\", addItemToWishlistHandler.bind(this));\n      this.delete(\"/user/wishlist/:productId\", removeItemFromWishlistHandler.bind(this));\n    }\n  });\n}","map":{"version":3,"names":["Server","Model","RestSerializer","loginHandler","signupHandler","addItemToCartHandler","getCartItemsHandler","removeItemFromCartHandler","updateCartItemHandler","getAllCategoriesHandler","getCategoryHandler","getAllProductsHandler","getProductHandler","addItemToWishlistHandler","getWishlistItemsHandler","removeItemFromWishlistHandler","categories","products","users","makeServer","environment","arguments","length","undefined","serializers","application","models","product","category","user","cart","wishlist","seeds","server","logging","forEach","item","create","routes","namespace","post","bind","get","delete"],"sources":["/Users/nichandr/NEOG/e-commerce/kitaab/src/server.js"],"sourcesContent":["import { Server, Model, RestSerializer } from \"miragejs\";\r\nimport {\r\n  loginHandler,\r\n  signupHandler,\r\n} from \"./backend/controllers/AuthController\";\r\nimport {\r\n  addItemToCartHandler,\r\n  getCartItemsHandler,\r\n  removeItemFromCartHandler,\r\n  updateCartItemHandler,\r\n} from \"./backend/controllers/CartController\";\r\nimport {\r\n  getAllCategoriesHandler,\r\n  getCategoryHandler,\r\n} from \"./backend/controllers/CategoryController\";\r\nimport {\r\n  getAllProductsHandler,\r\n  getProductHandler,\r\n} from \"./backend/controllers/ProductController\";\r\nimport {\r\n  addItemToWishlistHandler,\r\n  getWishlistItemsHandler,\r\n  removeItemFromWishlistHandler,\r\n} from \"./backend/controllers/WishlistController\";\r\nimport { categories } from \"./backend/db/categories\";\r\nimport { products } from \"./backend/db/products\";\r\nimport { users } from \"./backend/db/users\";\r\n\r\nexport function makeServer({ environment = \"development\" } = {}) {\r\n  return new Server({\r\n    serializers: {\r\n      application: RestSerializer,\r\n    },\r\n    environment,\r\n    models: {\r\n      product: Model,\r\n      category: Model,\r\n      user: Model,\r\n      cart: Model,\r\n      wishlist: Model,\r\n    },\r\n\r\n    // Runs on the start of the server\r\n    seeds(server) {\r\n      // disballing console logs from Mirage\r\n      server.logging = false;\r\n      products.forEach((item) => {\r\n        server.create(\"product\", { ...item });\r\n      });\r\n\r\n      users.forEach((item) =>\r\n        server.create(\"user\", { ...item, cart: [], wishlist: [] })\r\n      );\r\n\r\n      categories.forEach((item) => server.create(\"category\", { ...item }));\r\n    },\r\n\r\n    routes() {\r\n      this.namespace = \"api\";\r\n      // auth routes (public)\r\n      this.post(\"/auth/signup\", signupHandler.bind(this));\r\n      this.post(\"/auth/login\", loginHandler.bind(this));\r\n\r\n      // products routes (public)\r\n      this.get(\"/products\", getAllProductsHandler.bind(this));\r\n      this.get(\"/products/:productId\", getProductHandler.bind(this));\r\n\r\n      // categories routes (public)\r\n      this.get(\"/categories\", getAllCategoriesHandler.bind(this));\r\n      this.get(\"/categories/:categoryId\", getCategoryHandler.bind(this));\r\n\r\n      // cart routes (private)\r\n      this.get(\"/user/cart\", getCartItemsHandler.bind(this));\r\n      this.post(\"/user/cart\", addItemToCartHandler.bind(this));\r\n      this.post(\"/user/cart/:productId\", updateCartItemHandler.bind(this));\r\n      this.delete(\r\n        \"/user/cart/:productId\",\r\n        removeItemFromCartHandler.bind(this)\r\n      );\r\n\r\n      // wishlist routes (private)\r\n      this.get(\"/user/wishlist\", getWishlistItemsHandler.bind(this));\r\n      this.post(\"/user/wishlist\", addItemToWishlistHandler.bind(this));\r\n      this.delete(\r\n        \"/user/wishlist/:productId\",\r\n        removeItemFromWishlistHandler.bind(this)\r\n      );\r\n    },\r\n  });\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}